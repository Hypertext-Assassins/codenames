[{"/Users/home/code/hackathon/codenames/src/index.js":"1","/Users/home/code/hackathon/codenames/src/App.js":"2","/Users/home/code/hackathon/codenames/src/reportWebVitals.js":"3","/Users/home/code/hackathon/codenames/src/pages/LandingPage.jsx":"4","/Users/home/code/hackathon/codenames/src/pages/Game.jsx":"5","/Users/home/code/hackathon/codenames/src/services/words.js":"6","/Users/home/code/hackathon/codenames/src/components/Card.jsx":"7","/Users/home/code/hackathon/codenames/src/theme.js":"8","/Users/home/code/hackathon/codenames/src/global.js":"9"},{"size":852,"mtime":1611430652281,"results":"10","hashOfConfig":"11"},{"size":1080,"mtime":1611431853286,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1611423274172,"results":"13","hashOfConfig":"11"},{"size":279,"mtime":1611423274172,"results":"14","hashOfConfig":"11"},{"size":1069,"mtime":1611423274172,"results":"15","hashOfConfig":"11"},{"size":1892,"mtime":1611423274173,"results":"16","hashOfConfig":"11"},{"size":374,"mtime":1611423274170,"results":"17","hashOfConfig":"11"},{"size":507,"mtime":1611431167062,"results":"18","hashOfConfig":"11"},{"size":555,"mtime":1611431427730,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"c8tojy",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/home/code/hackathon/codenames/src/index.js",["41","42"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\nimport {BrowserRouter as Router, Route} from 'react-router-dom'\nimport { ColorModeScript } from '@chakra-ui/react';\n\n\nReactDOM.render(\n  <Router>\n    {/* <ColorModeScript initialColorMode={theme.config.initialColorMode} /> */}\n    <Route component={App}/>\n  </Router>,\n  document.getElementById('root')\n);\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["43","44"],"/Users/home/code/hackathon/codenames/src/App.js",[],"/Users/home/code/hackathon/codenames/src/reportWebVitals.js",[],"/Users/home/code/hackathon/codenames/src/pages/LandingPage.jsx",[],"/Users/home/code/hackathon/codenames/src/pages/Game.jsx",["45"],"import React from 'react'\nimport { useState, useEffect } from 'react'\nimport * as wordsAPI from '../services/words'\nimport Card from '../components/Card'\nimport { Grid, GridItem } from \"@chakra-ui/react\"\n\nconst Game = () => {\n    const [words, setWords] = useState([]);\n\n    const generateWords = async () => {\n        const words = await wordsAPI.shuffleBoard();\n        setWords(words);\n    }\n\n    useEffect(() => {\n        generateWords();\n    },[]);\n\n    return (  \n        <>\n        <h1>Game</h1>\n        {words.length ? \n            <Grid templateColumns=\"repeat(5, 1fr)\" templateRows=\"repeat(5, 1fr)\" gap={6}>\n                {words.map(el => \n                    <Card \n                        key={el.id}\n                        id={el.id}\n                        word={el.word}\n                        color={el.color}\n                        />\n                )}\n            </Grid>\n            :\n            <div>Generating words... </div>\n        }       \n        <button onClick={generateWords}>Reset</button>\n        </>\n    );\n}\n \nexport default Game;","/Users/home/code/hackathon/codenames/src/services/words.js",[],"/Users/home/code/hackathon/codenames/src/components/Card.jsx",[],"/Users/home/code/hackathon/codenames/src/theme.js",[],"/Users/home/code/hackathon/codenames/src/global.js",[],{"ruleId":"46","severity":1,"message":"47","line":6,"column":8,"nodeType":"48","messageId":"49","endLine":6,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":8,"column":10,"nodeType":"48","messageId":"49","endLine":8,"endColumn":25},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"46","severity":1,"message":"55","line":5,"column":16,"nodeType":"48","messageId":"49","endLine":5,"endColumn":24},"no-unused-vars","'theme' is defined but never used.","Identifier","unusedVar","'ColorModeScript' is defined but never used.","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'GridItem' is defined but never used.","no-global-assign","no-unsafe-negation"]